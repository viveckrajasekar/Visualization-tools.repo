import pyspark
import os
import urllib
import sys
from pyspark.ml.feature import VectorAssembler
from pyspark.ml.classification import LogisticRegression
from pyspark.ml.evaluation import MulticlassClassificationEvaluator
from pyspark.context import SparkContext
from pyspark.sql import HiveContext
sqlContext = HiveContext(sc)
sqlContext.sql("use test")
sqlContext.sql("show tables").show()
data=sqlContext.sql("SELECT cast(sepal_length as float), cast(sepal_width as float),cast(petal_length as float), cast(petal_width as float),class from external_iris_data where class not in(\'Iris-virginica\')")
data.schema;

feature_cols = data.columns[:-1]
assembler = pyspark.ml.feature.VectorAssembler(inputCols=feature_cols, outputCol='features')
data = assembler.transform(data)


data = data.select(['features', 'class'])
label_indexer = pyspark.ml.feature.StringIndexer(inputCol='class', outputCol='label').fit(data)
data = label_indexer.transform(data)

data = data.select(['features', 'label'])

data.show(10)

reg = 0.01

train, test = data.randomSplit([0.80, 0.20])
lr = pyspark.ml.classification.LogisticRegression(regParam=reg)
model = lr.fit(train)

prediction = model.transform(test)
print("Prediction")
prediction.show(10)

evaluator = pyspark.ml.evaluation.MulticlassClassificationEvaluator(metricName='accuracy')
accuracy = evaluator.evaluate(prediction)


	
